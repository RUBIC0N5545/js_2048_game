{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageWin","messageLose","fieldCell","Array","from","querySelectorAll","gameScore","rows","columns","score","field","length","fill","removeClassesExceptOne","element","classToKeep","classes","classList","forEach","className","remove","getRandom","countVars","Math","round","random","makeItem","countOfItems","updateInterface","randomRow","randomCol","contains","some","x","y","i","value","row","rowIndex","colIndex","cell","textContent","add","isMoved","notMoved","moved","j","slideRow","r","c","canMove","slide","newMatrix","slice","column","rotateField","countOfRotates","k","rotateMatrixClockwise","matrix","result","addEventListener","eventKey","preventDefault","code","startX","startY","touches","clientX","clientY","endX","changedTouches","endY","deltaX","deltaY","abs"],"mappings":"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","file":"main.d2800edb.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('.button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst fieldCell = Array.from(document.querySelectorAll('.field-cell'));\nconst gameScore = document.querySelector('.game-score');\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nlet field = Array.from({ length: columns }, () => Array(rows).fill(0));\n\nupdateInterface();\n\nbutton.addEventListener('click', () => {\n  field = Array.from({ length: columns }, () => Array(rows).fill(0));\n  score = 0;\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.textContent = 'Restart';\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  updateInterface();\n  makeItem(2);\n  updateInterface();\n});\n\nfunction removeClassesExceptOne(element, classToKeep = ('field-cell')) {\n  const classes = element.classList;\n  const classesToRemove = Array.from(classes);\n\n  classesToRemove.forEach(function(className) {\n    if (className !== classToKeep) {\n      classes.remove(className);\n    }\n  });\n}\n\nfunction getRandom(countVars) {\n  return Math.round(Math.random() * (countVars - 1));\n}\n\nfunction makeItem(countOfItems = 1) {\n  updateInterface();\n\n  let randomRow = getRandom(rows);\n  let randomCol = getRandom(columns);\n\n  if (messageWin.classList.contains('hidden')) {\n    if (messageStart.classList.length === 3) {\n      if (field.some(x => x.some(y => y === 0))) {\n        for (let i = 0; i < countOfItems; i++) {\n          while (field[randomRow][randomCol] !== 0) {\n            randomRow = getRandom(rows);\n            randomCol = getRandom(columns);\n          }\n\n          const value = getRandom(100) < 10 ? 4 : 2;\n\n          field[randomRow][randomCol] = value;\n          updateInterface();\n        }\n      } else {\n        messageLose.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction updateInterface() {\n  field.forEach((row, rowIndex) => {\n    row.forEach((value, colIndex) => {\n      const cell = fieldCell[rowIndex * 4 + colIndex];\n\n      cell.textContent = '';\n      removeClassesExceptOne(cell);\n      cell.classList.add('field-cell--0');\n      cell.classList.add(`field-cell--${value}`);\n\n      cell.textContent = value === 0 ? '' : value;\n    });\n  });\n}\n\nfunction isMoved(notMoved, moved) {\n  for (let i = 0; i < notMoved.length; i++) {\n    for (let j = 0; j < notMoved[0].length; j++) {\n      if (notMoved[i][j] !== moved[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction slideRow() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      let i = c;\n\n      while (field[r][i] === 0 && i <= 3) {\n        i++;\n\n        if (i <= 3) {\n          if (field[r][i] !== 0) {\n            field[r][c] = field[r][i];\n            field[r][i] = 0;\n            i = 0;\n            updateInterface();\n          }\n        }\n      }\n    }\n\n    updateInterface();\n  }\n}\n\nfunction canMove() {\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      if (field[i][j] === 0) {\n        return true;\n      }\n\n      if (j < rows - 1 && field[i][j] === field[i][j + 1]) {\n        return true;\n      }\n\n      if (i < columns - 1 && field[i][j] === field[i + 1][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction slide() {\n  const newMatrix = [];\n\n  for (let i = 0; i < field.length; i++) {\n    newMatrix[i] = field[i].slice();\n  }\n\n  slideRow();\n\n  for (let row = 0; row < rows; row++) {\n    for (let column = 0; column < columns; column++) {\n      if (field[row][column] === field[row][column + 1]) {\n        field[row][column] *= 2;\n        field[row][column + 1] = 0;\n        score += field[row][column];\n        updateInterface();\n      }\n    }\n  }\n\n  slideRow();\n\n  if (isMoved(newMatrix, field)) {\n    makeItem();\n  }\n}\n\nfunction rotateField(countOfRotates = 1) {\n  for (let k = 0; k < countOfRotates; k++) {\n    for (let i = 0; i < fieldCell.length; i++) {\n      removeClassesExceptOne(fieldCell[i]);\n      fieldCell[i].textContent = '';\n      updateInterface();\n    }\n\n    field = rotateMatrixClockwise(field);\n  }\n\n  updateInterface();\n}\n\nfunction rotateMatrixClockwise(matrix) {\n  const result = Array.from({ length: columns }, () => Array(rows).fill(0));\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      result[j][rows - 1 - i] = matrix[i][j];\n    }\n  }\n\n  return result;\n}\n\ndocument.addEventListener('keyup', function(eventKey) {\n  eventKey.preventDefault();\n\n  switch (eventKey.code) {\n    case 'ArrowLeft':\n      rotateField(4);\n\n      slide();\n      updateInterface();\n\n      break;\n\n    case 'ArrowRight':\n      rotateField(2);\n      slide();\n      rotateField(2);\n      break;\n\n    case 'ArrowUp':\n      rotateField(3);\n      slide();\n      rotateField();\n      break;\n\n    case 'ArrowDown':\n      rotateField();\n      slide();\n      rotateField(3);\n      break;\n\n    default:\n      return;\n  }\n\n  if (!canMove()) {\n    messageLose.classList.remove('hidden');\n  }\n\n  gameScore.textContent = score;\n\n  if (fieldCell.some(x => x.classList.contains('field-cell--2048'))) {\n    messageWin.classList.remove('hidden');\n    messageStart.classList.add('hidden');\n  }\n});\n\n// Додаємо обробку подій для тач-жестів\nlet startX = 0;\nlet startY = 0;\n\ndocument.addEventListener('touchstart', function(eventKey) {\n  startX = eventKey.touches[0].clientX;\n  startY = eventKey.touches[0].clientY;\n});\n\ndocument.addEventListener('touchmove', function(eventKey) {\n  eventKey.preventDefault();\n});\n\ndocument.addEventListener('touchend', function(eventKey) {\n  const endX = eventKey.changedTouches[0].clientX;\n  const endY = eventKey.changedTouches[0].clientY;\n\n  const deltaX = endX - startX;\n  const deltaY = endY - startY;\n\n  if (Math.abs(deltaX) > Math.abs(deltaY)) {\n    if (deltaX > 0) {\n      rotateField(2);\n      slide();\n      rotateField(2);\n    } else {\n      rotateField(4);\n      slide();\n      updateInterface();\n    }\n  } else {\n    if (deltaY > 0) {\n      rotateField();\n      slide();\n      rotateField(3);\n    } else {\n      rotateField(3);\n      slide();\n      rotateField();\n    }\n  }\n});\n"]}